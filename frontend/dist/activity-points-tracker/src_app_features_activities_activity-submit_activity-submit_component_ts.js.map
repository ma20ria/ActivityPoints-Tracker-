{"version":3,"file":"src_app_features_activities_activity-submit_activity-submit_component_ts.js","mappings":"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","sources":["./src/app/features/activities/activity-submit/activity-submit.component.ts","./src/app/features/activities/activity-submit/activity-submit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { Router, RouterLink } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NavbarComponent } from '../../../ui/navbar/navbar.component';\r\nimport { ActivityService } from '../../../core/services/activity.service';\r\nimport { AuthService } from '../../../core/services/auth.service';\r\nimport { User } from '../../../core/models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-activity-submit',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, RouterLink, NavbarComponent],\r\n  templateUrl: './activity-submit.component.html',\r\n  styleUrls: ['./activity-submit.component.scss']\r\n})\r\nexport class ActivitySubmitComponent implements OnInit {\r\n  activityForm: FormGroup;\r\n  currentUser: User | null = null;\r\n  isLoading = false;\r\n  isSubmitting = false;\r\n  errorMessage = '';\r\n  successMessage = '';\r\n  selectedFile: File | null = null;\r\n  extractedData: any = null;\r\n  \r\n  activityTypes = [\r\n    'Sports', \r\n    'Cultural', \r\n    'Technical', \r\n    'Professional Development', \r\n    'Community Service',\r\n    'Other'\r\n  ];\r\n  \r\n  levels = [1, 2, 3, 4, 5];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private activityService: ActivityService,\r\n    private router: Router,\r\n    private http: HttpClient\r\n  ) {\r\n    this.activityForm = this.fb.group({\r\n      title: ['', Validators.required],\r\n      activityType: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      eventOrganizer: ['', Validators.required],\r\n      date: ['', Validators.required],\r\n      level: ['', Validators.required],\r\n      certificateFile: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.authService.getCurrentUser();\r\n  }\r\n\r\n  onFileSelected(event: any): void {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      this.selectedFile = file;\r\n      this.activityForm.get('certificateFile')?.setValue(file.name);\r\n      \r\n      // Extract data from PDF\r\n      this.extractDataFromPDF(file);\r\n    }\r\n  }\r\n  \r\n  extractDataFromPDF(file: File): void {\r\n    this.isLoading = true;\r\n    \r\n    // Create FormData\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    \r\n    // In a real application, you would send this to a backend API for PDF text extraction\r\n    // For demo purposes, we'll simulate extraction with a timeout\r\n    setTimeout(() => {\r\n      // Simulated extracted data\r\n      this.extractedData = {\r\n        title: 'Certificate of Achievement',\r\n        eventOrganizer: 'Tech Conference 2023',\r\n        date: '2023-06-15',\r\n        description: 'Participated in the annual tech conference and completed all workshops.'\r\n      };\r\n      \r\n      // Populate form with extracted data\r\n      this.activityForm.patchValue({\r\n        title: this.extractedData.title,\r\n        eventOrganizer: this.extractedData.eventOrganizer,\r\n        date: this.extractedData.date,\r\n        description: this.extractedData.description\r\n      });\r\n      \r\n      this.isLoading = false;\r\n    }, 2000);\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.activityForm.invalid || !this.selectedFile) {\r\n      return;\r\n    }\r\n\r\n    this.isSubmitting = true;\r\n    this.errorMessage = '';\r\n    this.successMessage = '';\r\n\r\n    // Create FormData\r\n    const formData = new FormData();\r\n    formData.append('certificate', this.selectedFile);\r\n    \r\n    // Add other form values\r\n    Object.keys(this.activityForm.value).forEach(key => {\r\n      if (key !== 'certificateFile') {\r\n        formData.append(key, this.activityForm.value[key]);\r\n      }\r\n    });\r\n\r\n    // Submit the activity using the ActivityService\r\n    this.activityService.submitActivity(formData).subscribe({\r\n      next: (response) => {\r\n        this.isSubmitting = false;\r\n        this.successMessage = response.message || 'Activity submitted successfully! Your certificate will be reviewed by your teacher.';\r\n        \r\n        // Reset form after successful submission\r\n        this.activityForm.reset();\r\n        this.selectedFile = null;\r\n        \r\n        // Navigate to dashboard after a delay\r\n        setTimeout(() => {\r\n          this.router.navigate(['/activities']);\r\n        }, 2000);\r\n      },\r\n      error: (error) => {\r\n        this.isSubmitting = false;\r\n        this.errorMessage = error.error.message || 'Failed to submit activity. Please try again.';\r\n      }\r\n    });\r\n  }\r\n} ","<app-navbar></app-navbar>\r\n\r\n<div class=\"container py-4\">\r\n  <div class=\"row mb-4\">\r\n    <div class=\"col-12\">\r\n      <div class=\"d-flex justify-content-between align-items-center\">\r\n        <h1 class=\"mb-0\">Submit Activity</h1>\r\n        <a routerLink=\"/dashboard/student\" class=\"btn btn-outline-primary\">Back to Dashboard</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"card border-0 shadow-sm\">\r\n    <div class=\"card-body p-4\">\r\n      <!-- Success Message -->\r\n      <div *ngIf=\"successMessage\" class=\"alert alert-success mb-4\">\r\n        {{ successMessage }}\r\n      </div>\r\n      \r\n      <!-- Error Message -->\r\n      <div *ngIf=\"errorMessage\" class=\"alert alert-danger mb-4\">\r\n        {{ errorMessage }}\r\n      </div>\r\n      \r\n      <form [formGroup]=\"activityForm\" (ngSubmit)=\"onSubmit()\">\r\n        <!-- Certificate Upload Section -->\r\n        <div class=\"mb-4\">\r\n          <h5 class=\"mb-3\">Upload Certificate</h5>\r\n          <div class=\"certificate-upload-container\">\r\n            <div class=\"certificate-upload-box\">\r\n              <input \r\n                type=\"file\" \r\n                id=\"certificateFile\" \r\n                class=\"file-input\" \r\n                accept=\".pdf,.jpg,.jpeg,.png\" \r\n                (change)=\"onFileSelected($event)\"\r\n              >\r\n              <label for=\"certificateFile\" class=\"file-label\">\r\n                <div class=\"upload-icon\">\r\n                  <i class=\"bi bi-cloud-arrow-up\"></i>\r\n                </div>\r\n                <div class=\"upload-text\">\r\n                  <span *ngIf=\"!selectedFile\">Drag & drop your certificate here or click to browse</span>\r\n                  <span *ngIf=\"selectedFile\">{{ selectedFile.name }}</span>\r\n                </div>\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <small class=\"text-muted\">Supported formats: PDF, JPG, JPEG, PNG (Max size: 5MB)</small>\r\n        </div>\r\n        \r\n        <!-- Loading Indicator for PDF Extraction -->\r\n        <div *ngIf=\"isLoading\" class=\"text-center py-3 mb-4\">\r\n          <div class=\"spinner-border text-primary\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n          <p class=\"mt-2\">Extracting data from certificate...</p>\r\n        </div>\r\n        \r\n        <!-- Certificate Details Section -->\r\n        <div *ngIf=\"!isLoading\">\r\n          <h5 class=\"mb-3\">Certificate Details</h5>\r\n          <p class=\"text-muted mb-4\">The following details were extracted from your certificate. Please verify and complete any missing information.</p>\r\n          \r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 mb-3\">\r\n              <label for=\"title\" class=\"form-label\">Certificate Title</label>\r\n              <input \r\n                type=\"text\" \r\n                id=\"title\" \r\n                formControlName=\"title\" \r\n                class=\"form-input\"\r\n                [ngClass]=\"{'is-invalid': activityForm.get('title')?.invalid && activityForm.get('title')?.touched}\"\r\n              >\r\n              <div *ngIf=\"activityForm.get('title')?.invalid && activityForm.get('title')?.touched\" class=\"text-danger mt-1\">\r\n                <small>Title is required</small>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"col-md-6 mb-3\">\r\n              <label for=\"eventOrganizer\" class=\"form-label\">Event Organizer</label>\r\n              <input \r\n                type=\"text\" \r\n                id=\"eventOrganizer\" \r\n                formControlName=\"eventOrganizer\" \r\n                class=\"form-input\"\r\n                [ngClass]=\"{'is-invalid': activityForm.get('eventOrganizer')?.invalid && activityForm.get('eventOrganizer')?.touched}\"\r\n              >\r\n              <div *ngIf=\"activityForm.get('eventOrganizer')?.invalid && activityForm.get('eventOrganizer')?.touched\" class=\"text-danger mt-1\">\r\n                <small>Event organizer is required</small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 mb-3\">\r\n              <label for=\"activityType\" class=\"form-label\">Activity Type</label>\r\n              <select \r\n                id=\"activityType\" \r\n                formControlName=\"activityType\" \r\n                class=\"form-input\"\r\n                [ngClass]=\"{'is-invalid': activityForm.get('activityType')?.invalid && activityForm.get('activityType')?.touched}\"\r\n              >\r\n                <option value=\"\">Select Activity Type</option>\r\n                <option *ngFor=\"let type of activityTypes\" [value]=\"type\">{{ type }}</option>\r\n              </select>\r\n              <div *ngIf=\"activityForm.get('activityType')?.invalid && activityForm.get('activityType')?.touched\" class=\"text-danger mt-1\">\r\n                <small>Activity type is required</small>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"col-md-6 mb-3\">\r\n              <label for=\"date\" class=\"form-label\">Certificate Date</label>\r\n              <input \r\n                type=\"date\" \r\n                id=\"date\" \r\n                formControlName=\"date\" \r\n                class=\"form-input\"\r\n                [ngClass]=\"{'is-invalid': activityForm.get('date')?.invalid && activityForm.get('date')?.touched}\"\r\n              >\r\n              <div *ngIf=\"activityForm.get('date')?.invalid && activityForm.get('date')?.touched\" class=\"text-danger mt-1\">\r\n                <small>Date is required</small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 mb-3\">\r\n              <label for=\"level\" class=\"form-label\">Activity Level</label>\r\n              <select \r\n                id=\"level\" \r\n                formControlName=\"level\" \r\n                class=\"form-input\"\r\n                [ngClass]=\"{'is-invalid': activityForm.get('level')?.invalid && activityForm.get('level')?.touched}\"\r\n              >\r\n                <option value=\"\">Select Level</option>\r\n                <option *ngFor=\"let level of levels\" [value]=\"level\">Level {{ level }}</option>\r\n              </select>\r\n              <div *ngIf=\"activityForm.get('level')?.invalid && activityForm.get('level')?.touched\" class=\"text-danger mt-1\">\r\n                <small>Level is required</small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"mb-3\">\r\n            <label for=\"description\" class=\"form-label\">Description</label>\r\n            <textarea \r\n              id=\"description\" \r\n              formControlName=\"description\" \r\n              class=\"form-input\" \r\n              rows=\"4\"\r\n              [ngClass]=\"{'is-invalid': activityForm.get('description')?.invalid && activityForm.get('description')?.touched}\"\r\n            ></textarea>\r\n            <div *ngIf=\"activityForm.get('description')?.invalid && activityForm.get('description')?.touched\" class=\"text-danger mt-1\">\r\n              <small>Description is required</small>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"d-grid gap-2 mt-4\">\r\n            <button \r\n              type=\"submit\" \r\n              class=\"btn btn-primary\" \r\n              [disabled]=\"activityForm.invalid || isSubmitting || !selectedFile\"\r\n            >\r\n              <span *ngIf=\"isSubmitting\">Submitting...</span>\r\n              <span *ngIf=\"!isSubmitting\">Submit Activity</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div> "],"names":["CommonModule","Validators","ReactiveFormsModule","RouterLink","NavbarComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","successMessage","errorMessage","ɵɵtextInterpolate","selectedFile","name","ɵɵproperty","type_r2","level_r3","ɵɵelement","ɵɵtemplate","ActivitySubmitComponent_div_29_div_10_Template","ActivitySubmitComponent_div_29_div_15_Template","ActivitySubmitComponent_div_29_option_23_Template","ActivitySubmitComponent_div_29_div_24_Template","ActivitySubmitComponent_div_29_div_29_Template","ActivitySubmitComponent_div_29_option_37_Template","ActivitySubmitComponent_div_29_div_38_Template","ActivitySubmitComponent_div_29_div_43_Template","ActivitySubmitComponent_div_29_span_46_Template","ActivitySubmitComponent_div_29_span_47_Template","ɵɵpureFunction1","_c0","tmp_1_0","activityForm","get","invalid","touched","tmp_2_0","tmp_3_0","tmp_4_0","tmp_5_0","activityTypes","tmp_7_0","tmp_8_0","tmp_9_0","tmp_10_0","levels","tmp_12_0","tmp_13_0","tmp_14_0","isSubmitting","ActivitySubmitComponent","constructor","fb","authService","activityService","router","http","currentUser","isLoading","extractedData","group","title","required","activityType","description","eventOrganizer","date","level","certificateFile","ngOnInit","getCurrentUser","onFileSelected","event","file","target","files","setValue","extractDataFromPDF","formData","FormData","append","setTimeout","patchValue","onSubmit","Object","keys","value","forEach","key","submitActivity","subscribe","next","response","message","reset","navigate","error","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","ActivityService","i4","Router","i5","HttpClient","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ActivitySubmitComponent_Template","rf","ctx","ActivitySubmitComponent_div_11_Template","ActivitySubmitComponent_div_12_Template","ɵɵlistener","ActivitySubmitComponent_Template_form_ngSubmit_13_listener","ActivitySubmitComponent_Template_input_change_19_listener","$event","ActivitySubmitComponent_span_24_Template","ActivitySubmitComponent_span_25_Template","ActivitySubmitComponent_div_28_Template","ActivitySubmitComponent_div_29_Template","i6","NgClass","NgForOf","NgIf","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}