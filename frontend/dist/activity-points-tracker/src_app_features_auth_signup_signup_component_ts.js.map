{"version":3,"file":"src_app_features_auth_signup_signup_component_ts.js","mappings":"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","sources":["./src/app/features/auth/signup/signup.component.ts","./src/app/features/auth/signup/signup.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { Router, RouterLink } from '@angular/router';\r\nimport { AuthService } from '../../../core/services/auth.service';\r\nimport { NavbarComponent } from '../../../ui/navbar/navbar.component';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, RouterLink, NavbarComponent],\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\nexport class SignupComponent {\r\n  signupForm: FormGroup;\r\n  errorMessage: string = '';\r\n  isLoading: boolean = false;\r\n  \r\n  roleOptions = ['student', 'teacher', 'superadmin'];\r\n  departments = [\r\n    'Computer Science',\r\n    'Information Technology',\r\n    'Electronics',\r\n    'Mechanical',\r\n    'Civil',\r\n    'Electrical',\r\n    'Chemical',\r\n    'Biotechnology'\r\n  ];\r\n  semesters = [1, 2, 3, 4, 5, 6, 7, 8];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.signupForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', Validators.required],\r\n      role: ['student', Validators.required],\r\n      department: [''],\r\n      semester: [''],\r\n      class: [''],\r\n      rollNumber: [''],\r\n      teacherClass: ['']\r\n    }, { validators: this.passwordMatchValidator });\r\n  }\r\n\r\n  passwordMatchValidator(form: FormGroup) {\r\n    const password = form.get('password')?.value;\r\n    const confirmPassword = form.get('confirmPassword')?.value;\r\n    \r\n    if (password !== confirmPassword) {\r\n      form.get('confirmPassword')?.setErrors({ passwordMismatch: true });\r\n      return { passwordMismatch: true };\r\n    }\r\n    \r\n    return null;\r\n  }\r\n\r\n  onRoleChange(): void {\r\n    const role = this.signupForm.get('role')?.value;\r\n    \r\n    if (role === 'student' || role === 'teacher') {\r\n      this.signupForm.get('department')?.setValidators(Validators.required);\r\n    } else {\r\n      this.signupForm.get('department')?.clearValidators();\r\n    }\r\n    \r\n    if (role === 'student') {\r\n      this.signupForm.get('semester')?.setValidators(Validators.required);\r\n      this.signupForm.get('class')?.setValidators(Validators.required);\r\n      this.signupForm.get('rollNumber')?.setValidators(Validators.required);\r\n      this.signupForm.get('teacherClass')?.clearValidators();\r\n    } else if (role === 'teacher') {\r\n      this.signupForm.get('semester')?.clearValidators();\r\n      this.signupForm.get('class')?.clearValidators();\r\n      this.signupForm.get('rollNumber')?.clearValidators();\r\n      this.signupForm.get('teacherClass')?.setValidators(Validators.required);\r\n    } else {\r\n      this.signupForm.get('semester')?.clearValidators();\r\n      this.signupForm.get('class')?.clearValidators();\r\n      this.signupForm.get('rollNumber')?.clearValidators();\r\n      this.signupForm.get('teacherClass')?.clearValidators();\r\n    }\r\n    \r\n    this.signupForm.get('department')?.updateValueAndValidity();\r\n    this.signupForm.get('semester')?.updateValueAndValidity();\r\n    this.signupForm.get('class')?.updateValueAndValidity();\r\n    this.signupForm.get('rollNumber')?.updateValueAndValidity();\r\n    this.signupForm.get('teacherClass')?.updateValueAndValidity();\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.signupForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    this.errorMessage = '';\r\n\r\n    // Remove confirmPassword before sending to API\r\n    const userData = { ...this.signupForm.value };\r\n    delete userData.confirmPassword;\r\n\r\n    this.authService.register(userData).subscribe({\r\n      next: (response) => {\r\n        this.isLoading = false;\r\n        this.router.navigate(['/dashboard', response.user.role]);\r\n      },\r\n      error: (error) => {\r\n        this.isLoading = false;\r\n        this.errorMessage = error.error.message || 'Registration failed. Please try again.';\r\n      }\r\n    });\r\n  }\r\n} ","<app-navbar></app-navbar>\r\n\r\n<div class=\"container py-5\">\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col-md-8 col-lg-6\">\r\n      <div class=\"card shadow\">\r\n        <div class=\"card-body p-5\">\r\n          <h2 class=\"text-center mb-4\">Create an Account</h2>\r\n          \r\n          <div *ngIf=\"errorMessage\" class=\"alert alert-danger mb-4\">\r\n            {{ errorMessage }}\r\n          </div>\r\n          \r\n          <form [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\r\n            <!-- Basic Information -->\r\n            <div class=\"mb-3\">\r\n              <label for=\"name\" class=\"form-label\">Full Name</label>\r\n              <input \r\n                type=\"text\" \r\n                id=\"name\" \r\n                formControlName=\"name\" \r\n                class=\"form-input\" \r\n                [ngClass]=\"{'is-invalid': signupForm.get('name')?.invalid && signupForm.get('name')?.touched}\"\r\n              >\r\n              <div *ngIf=\"signupForm.get('name')?.invalid && signupForm.get('name')?.touched\" class=\"text-danger mt-1\">\r\n                <small *ngIf=\"signupForm.get('name')?.errors?.['required']\">Name is required</small>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"mb-3\">\r\n              <label for=\"email\" class=\"form-label\">Email Address</label>\r\n              <input \r\n                type=\"email\" \r\n                id=\"email\" \r\n                formControlName=\"email\" \r\n                class=\"form-input\" \r\n                [ngClass]=\"{'is-invalid': signupForm.get('email')?.invalid && signupForm.get('email')?.touched}\"\r\n              >\r\n              <div *ngIf=\"signupForm.get('email')?.invalid && signupForm.get('email')?.touched\" class=\"text-danger mt-1\">\r\n                <small *ngIf=\"signupForm.get('email')?.errors?.['required']\">Email is required</small>\r\n                <small *ngIf=\"signupForm.get('email')?.errors?.['email']\">Please enter a valid email</small>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"row\">\r\n              <div class=\"col-md-6 mb-3\">\r\n                <label for=\"password\" class=\"form-label\">Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"password\" \r\n                  formControlName=\"password\" \r\n                  class=\"form-input\"\r\n                  [ngClass]=\"{'is-invalid': signupForm.get('password')?.invalid && signupForm.get('password')?.touched}\"\r\n                >\r\n                <div *ngIf=\"signupForm.get('password')?.invalid && signupForm.get('password')?.touched\" class=\"text-danger mt-1\">\r\n                  <small *ngIf=\"signupForm.get('password')?.errors?.['required']\">Password is required</small>\r\n                  <small *ngIf=\"signupForm.get('password')?.errors?.['minlength']\">Password must be at least 6 characters</small>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"col-md-6 mb-3\">\r\n                <label for=\"confirmPassword\" class=\"form-label\">Confirm Password</label>\r\n                <input \r\n                  type=\"password\" \r\n                  id=\"confirmPassword\" \r\n                  formControlName=\"confirmPassword\" \r\n                  class=\"form-input\"\r\n                  [ngClass]=\"{'is-invalid': signupForm.get('confirmPassword')?.invalid && signupForm.get('confirmPassword')?.touched}\"\r\n                >\r\n                <div *ngIf=\"signupForm.get('confirmPassword')?.invalid && signupForm.get('confirmPassword')?.touched\" class=\"text-danger mt-1\">\r\n                  <small *ngIf=\"signupForm.get('confirmPassword')?.errors?.['required']\">Confirm password is required</small>\r\n                  <small *ngIf=\"signupForm.get('confirmPassword')?.errors?.['passwordMismatch']\">Passwords do not match</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- Role Selection -->\r\n            <div class=\"mb-3\">\r\n              <label for=\"role\" class=\"form-label\">Role</label>\r\n              <select \r\n                id=\"role\" \r\n                formControlName=\"role\" \r\n                class=\"form-input\"\r\n                (change)=\"onRoleChange()\"\r\n              >\r\n                <option *ngFor=\"let role of roleOptions\" [value]=\"role\">{{ role | titlecase }}</option>\r\n              </select>\r\n            </div>\r\n            \r\n            <!-- Department (for students and teachers) -->\r\n            <div class=\"mb-3\" *ngIf=\"signupForm.get('role')?.value === 'student' || signupForm.get('role')?.value === 'teacher'\">\r\n              <label for=\"department\" class=\"form-label\">Department</label>\r\n              <select \r\n                id=\"department\" \r\n                formControlName=\"department\" \r\n                class=\"form-input\"\r\n                [ngClass]=\"{'is-invalid': signupForm.get('department')?.invalid && signupForm.get('department')?.touched}\"\r\n              >\r\n                <option value=\"\">Select Department</option>\r\n                <option *ngFor=\"let dept of departments\" [value]=\"dept\">{{ dept }}</option>\r\n              </select>\r\n              <div *ngIf=\"signupForm.get('department')?.invalid && signupForm.get('department')?.touched\" class=\"text-danger mt-1\">\r\n                <small *ngIf=\"signupForm.get('department')?.errors?.['required']\">Department is required</small>\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- Teacher-specific fields -->\r\n            <div *ngIf=\"signupForm.get('role')?.value === 'teacher'\">\r\n              <div class=\"mb-3\">\r\n                <label for=\"teacherClass\" class=\"form-label\">Class (that you are in charge of)</label>\r\n                <input \r\n                  type=\"text\" \r\n                  id=\"teacherClass\" \r\n                  formControlName=\"teacherClass\" \r\n                  class=\"form-input\"\r\n                  [ngClass]=\"{'is-invalid': signupForm.get('teacherClass')?.invalid && signupForm.get('teacherClass')?.touched}\"\r\n                  placeholder=\"e.g., CSE-A\"\r\n                >\r\n                <div *ngIf=\"signupForm.get('teacherClass')?.invalid && signupForm.get('teacherClass')?.touched\" class=\"text-danger mt-1\">\r\n                  <small *ngIf=\"signupForm.get('teacherClass')?.errors?.['required']\">Class is required</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <!-- Student-specific fields -->\r\n            <div *ngIf=\"signupForm.get('role')?.value === 'student'\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6 mb-3\">\r\n                  <label for=\"semester\" class=\"form-label\">Semester</label>\r\n                  <select \r\n                    id=\"semester\" \r\n                    formControlName=\"semester\" \r\n                    class=\"form-input\"\r\n                    [ngClass]=\"{'is-invalid': signupForm.get('semester')?.invalid && signupForm.get('semester')?.touched}\"\r\n                  >\r\n                    <option value=\"\">Select Semester</option>\r\n                    <option *ngFor=\"let sem of semesters\" [value]=\"sem\">Semester {{ sem }}</option>\r\n                  </select>\r\n                  <div *ngIf=\"signupForm.get('semester')?.invalid && signupForm.get('semester')?.touched\" class=\"text-danger mt-1\">\r\n                    <small *ngIf=\"signupForm.get('semester')?.errors?.['required']\">Semester is required</small>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"col-md-6 mb-3\">\r\n                  <label for=\"class\" class=\"form-label\">Class</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    id=\"class\" \r\n                    formControlName=\"class\" \r\n                    class=\"form-input\"\r\n                    [ngClass]=\"{'is-invalid': signupForm.get('class')?.invalid && signupForm.get('class')?.touched}\"\r\n                    placeholder=\"e.g., CSE-A\"\r\n                  >\r\n                  <div *ngIf=\"signupForm.get('class')?.invalid && signupForm.get('class')?.touched\" class=\"text-danger mt-1\">\r\n                    <small *ngIf=\"signupForm.get('class')?.errors?.['required']\">Class is required</small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"mb-3\">\r\n                <label for=\"rollNumber\" class=\"form-label\">Roll Number</label>\r\n                <input \r\n                  type=\"text\" \r\n                  id=\"rollNumber\" \r\n                  formControlName=\"rollNumber\" \r\n                  class=\"form-input\"\r\n                  [ngClass]=\"{'is-invalid': signupForm.get('rollNumber')?.invalid && signupForm.get('rollNumber')?.touched}\"\r\n                >\r\n                <div *ngIf=\"signupForm.get('rollNumber')?.invalid && signupForm.get('rollNumber')?.touched\" class=\"text-danger mt-1\">\r\n                  <small *ngIf=\"signupForm.get('rollNumber')?.errors?.['required']\">Roll number is required</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"d-grid gap-2 mt-4\">\r\n              <button \r\n                type=\"submit\" \r\n                class=\"btn btn-primary\" \r\n                [disabled]=\"signupForm.invalid || isLoading\"\r\n              >\r\n                <span *ngIf=\"isLoading\">Creating account...</span>\r\n                <span *ngIf=\"!isLoading\">Create Account</span>\r\n              </button>\r\n            </div>\r\n          </form>\r\n          \r\n          <div class=\"text-center mt-4\">\r\n            <p>Already have an account? <a routerLink=\"/login\" class=\"text-primary\">Login</a></p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> "],"names":["CommonModule","Validators","ReactiveFormsModule","RouterLink","NavbarComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","errorMessage","ɵɵtemplate","SignupComponent_div_14_small_1_Template","ɵɵproperty","tmp_1_0","signupForm","get","errors","SignupComponent_div_19_small_1_Template","SignupComponent_div_19_small_2_Template","tmp_2_0","SignupComponent_div_25_small_1_Template","SignupComponent_div_25_small_2_Template","SignupComponent_div_30_small_1_Template","SignupComponent_div_30_small_2_Template","role_r2","ɵɵtextInterpolate","ɵɵpipeBind1","dept_r3","SignupComponent_div_36_div_7_small_1_Template","SignupComponent_div_36_option_6_Template","SignupComponent_div_36_div_7_Template","ɵɵpureFunction1","_c0","invalid","touched","departments","tmp_3_0","SignupComponent_div_37_div_5_small_1_Template","ɵɵelement","SignupComponent_div_37_div_5_Template","sem_r4","SignupComponent_div_38_div_9_small_1_Template","SignupComponent_div_38_div_14_small_1_Template","SignupComponent_div_38_div_19_small_1_Template","SignupComponent_div_38_option_8_Template","SignupComponent_div_38_div_9_Template","SignupComponent_div_38_div_14_Template","SignupComponent_div_38_div_19_Template","semesters","tmp_4_0","tmp_5_0","tmp_6_0","tmp_7_0","SignupComponent","constructor","fb","authService","router","isLoading","roleOptions","group","name","required","email","password","minLength","confirmPassword","role","department","semester","class","rollNumber","teacherClass","validators","passwordMatchValidator","form","value","setErrors","passwordMismatch","onRoleChange","setValidators","clearValidators","updateValueAndValidity","onSubmit","userData","register","subscribe","next","response","navigate","user","error","message","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","SignupComponent_Template","rf","ctx","SignupComponent_div_8_Template","ɵɵlistener","SignupComponent_Template_form_ngSubmit_9_listener","SignupComponent_div_14_Template","SignupComponent_div_19_Template","SignupComponent_div_25_Template","SignupComponent_div_30_Template","SignupComponent_Template_select_change_34_listener","SignupComponent_option_35_Template","SignupComponent_div_36_Template","SignupComponent_div_37_Template","SignupComponent_div_38_Template","SignupComponent_span_41_Template","SignupComponent_span_42_Template","tmp_8_0","tmp_9_0","tmp_11_0","tmp_12_0","tmp_13_0","i4","NgClass","NgForOf","NgIf","TitleCasePipe","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}