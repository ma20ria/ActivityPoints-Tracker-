{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;;;;AA2BM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,sCAAsC;EAEf;EAExCC,cAAcA,CAACC,YAAsB;IACnC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAwB,IAAI,CAACH,MAAM,EAAEE,YAAY,CAAC;EACzE;EAEAE,eAAeA,CAAA;IACb,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAA0B,IAAI,CAACL,MAAM,CAAC;EAC5D;EAEAM,oBAAoBA,CAAA;IAClB,OAAO,IAAI,CAACP,IAAI,CAACM,GAAG,CAA4B,GAAG,IAAI,CAACL,MAAM,UAAU,CAAC;EAC3E;EAEAO,cAAcA,CAACC,EAAU,EAAEC,UAA0F;IACnH,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAwB,GAAG,IAAI,CAACV,MAAM,IAAIQ,EAAE,SAAS,EAAEC,UAAU,CAAC;EACxF;EAEAE,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACZ,IAAI,CAACM,GAAG,CAA0B,GAAG,IAAI,CAACL,MAAM,MAAM,CAAC;EACrE;EAEAY,cAAcA,CAACC,OAAa;IAC1B,OAAO,IAAI,CAACd,IAAI,CAACM,GAAG,CAAmB,GAAG,IAAI,CAACL,MAAM,SAAS,EAAE;MAAEc,MAAM,EAAED;IAAO,CAAE,CAAC;EACtF;;;uBA3BWhB,eAAe,EAAAkB,sDAAA,CAAAE,4DAAA;IAAA;EAAA;;;aAAfpB,eAAe;MAAAsB,OAAA,EAAftB,eAAe,CAAAuB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","sources":["./src/app/core/services/activity.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Activity } from '../models/activity.model';\r\n\r\n// Define the API response interfaces\r\ninterface ApiResponse<T> {\r\n  success: boolean;\r\n  count?: number;\r\n  data: T;\r\n  message?: string;\r\n}\r\n\r\ninterface PendingActivitiesResponse {\r\n  success: boolean;\r\n  count: number;\r\n  stats: {\r\n    pending: number;\r\n    approved: number;\r\n    rejected: number;\r\n  };\r\n  data: Activity[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ActivityService {\r\n  private apiUrl = 'http://localhost:5000/api/activities';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  submitActivity(activityData: FormData): Observable<ApiResponse<Activity>> {\r\n    return this.http.post<ApiResponse<Activity>>(this.apiUrl, activityData);\r\n  }\r\n\r\n  getMyActivities(): Observable<ApiResponse<Activity[]>> {\r\n    return this.http.get<ApiResponse<Activity[]>>(this.apiUrl);\r\n  }\r\n\r\n  getPendingActivities(): Observable<PendingActivitiesResponse> {\r\n    return this.http.get<PendingActivitiesResponse>(`${this.apiUrl}/pending`);\r\n  }\r\n\r\n  reviewActivity(id: string, reviewData: { status: 'approved' | 'rejected', feedback?: string, pointsAwarded?: number }): Observable<ApiResponse<Activity>> {\r\n    return this.http.put<ApiResponse<Activity>>(`${this.apiUrl}/${id}/review`, reviewData);\r\n  }\r\n\r\n  getAllActivities(): Observable<ApiResponse<Activity[]>> {\r\n    return this.http.get<ApiResponse<Activity[]>>(`${this.apiUrl}/all`);\r\n  }\r\n\r\n  generateReport(filters?: any): Observable<ApiResponse<any>> {\r\n    return this.http.get<ApiResponse<any>>(`${this.apiUrl}/report`, { params: filters });\r\n  }\r\n} "],"names":["ActivityService","constructor","http","apiUrl","submitActivity","activityData","post","getMyActivities","get","getPendingActivities","reviewActivity","id","reviewData","put","getAllActivities","generateReport","filters","params","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}