{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/api/users';\n  }\n  getAllUsers() {\n    return this.http.get(this.apiUrl);\n  }\n  getUsersByRole(role) {\n    return this.http.get(`${this.apiUrl}/role/${role}`);\n  }\n  getUserById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  updateUser(id, userData) {\n    return this.http.put(`${this.apiUrl}/${id}`, userData);\n  }\n  deleteUser(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  getAssignedStudents(teacherId) {\n    return this.http.get(`${this.apiUrl}/teacher/${teacherId}/students`);\n  }\n  static {\n    this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["UserService","constructor","http","apiUrl","getAllUsers","get","getUsersByRole","role","getUserById","id","updateUser","userData","put","deleteUser","delete","getAssignedStudents","teacherId","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\LENOVO\\OneDrive\\Desktop\\finalminitrack\\ActivityPoints-Tracker-\\frontend\\src\\app\\core\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../models/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private apiUrl = 'http://localhost:5000/api/users';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllUsers(): Observable<User[]> {\r\n    return this.http.get<User[]>(this.apiUrl);\r\n  }\r\n\r\n  getUsersByRole(role: string): Observable<User[]> {\r\n    return this.http.get<User[]>(`${this.apiUrl}/role/${role}`);\r\n  }\r\n\r\n  getUserById(id: string): Observable<User> {\r\n    return this.http.get<User>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  updateUser(id: string, userData: Partial<User>): Observable<User> {\r\n    return this.http.put<User>(`${this.apiUrl}/${id}`, userData);\r\n  }\r\n\r\n  deleteUser(id: string): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  getAssignedStudents(teacherId: string): Observable<User[]> {\r\n    return this.http.get<User[]>(`${this.apiUrl}/teacher/${teacherId}/students`);\r\n  }\r\n} "],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,iCAAiC;EAEV;EAExCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,IAAI,CAACF,MAAM,CAAC;EAC3C;EAEAG,cAAcA,CAACC,IAAY;IACzB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,SAASI,IAAI,EAAE,CAAC;EAC7D;EAEAC,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAO,GAAG,IAAI,CAACF,MAAM,IAAIM,EAAE,EAAE,CAAC;EACpD;EAEAC,UAAUA,CAACD,EAAU,EAAEE,QAAuB;IAC5C,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAO,GAAG,IAAI,CAACT,MAAM,IAAIM,EAAE,EAAE,EAAEE,QAAQ,CAAC;EAC9D;EAEAE,UAAUA,CAACJ,EAAU;IACnB,OAAO,IAAI,CAACP,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,MAAM,IAAIM,EAAE,EAAE,CAAC;EACjD;EAEAM,mBAAmBA,CAACC,SAAiB;IACnC,OAAO,IAAI,CAACd,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,YAAYa,SAAS,WAAW,CAAC;EAC9E;;;uBA3BWhB,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXpB,WAAW;MAAAqB,OAAA,EAAXrB,WAAW,CAAAsB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}