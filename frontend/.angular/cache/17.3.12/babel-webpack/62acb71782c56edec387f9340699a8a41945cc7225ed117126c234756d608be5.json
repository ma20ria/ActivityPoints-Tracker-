{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nlet ForgotPasswordComponent = class ForgotPasswordComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.email = '';\n    this.message = '';\n    this.messageType = 'success';\n    this.isLoading = false;\n  }\n  onSubmit() {\n    this.isLoading = true;\n    this.message = '';\n    this.authService.forgotPassword(this.email).subscribe({\n      next: response => {\n        this.message = 'Password reset link has been sent to your email';\n        this.messageType = 'success';\n        this.isLoading = false;\n      },\n      error: error => {\n        this.message = error.error?.message || 'An error occurred';\n        this.messageType = 'danger';\n        this.isLoading = false;\n      }\n    });\n  }\n};\nForgotPasswordComponent = __decorate([Component({\n  selector: 'app-forgot-password',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterLink],\n  template: `\n    <div class=\"container mt-5\">\n      <div class=\"row justify-content-center\">\n        <div class=\"col-md-6\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <h2 class=\"card-title text-center mb-4\">Forgot Password</h2>\n              \n              <div *ngIf=\"message\" class=\"alert\" [ngClass]=\"messageType === 'success' ? 'alert-success' : 'alert-danger'\">\n                {{ message }}\n              </div>\n\n              <form (ngSubmit)=\"onSubmit()\">\n                <div class=\"mb-3\">\n                  <label for=\"email\" class=\"form-label\">Email address</label>\n                  <input\n                    type=\"email\"\n                    class=\"form-control\"\n                    id=\"email\"\n                    [(ngModel)]=\"email\"\n                    name=\"email\"\n                    required\n                  >\n                </div>\n\n                <div class=\"d-grid gap-2\">\n                  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"isLoading\">\n                    {{ isLoading ? 'Sending...' : 'Send Reset Link' }}\n                  </button>\n                </div>\n\n                <div class=\"text-center mt-3\">\n                  <a routerLink=\"/login\">Back to Login</a>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `\n})], ForgotPasswordComponent);\nexport { ForgotPasswordComponent };","map":{"version":3,"names":["Component","CommonModule","FormsModule","RouterLink","ForgotPasswordComponent","constructor","authService","email","message","messageType","isLoading","onSubmit","forgotPassword","subscribe","next","response","error","__decorate","selector","standalone","imports","template"],"sources":["C:\\Users\\LENOVO\\OneDrive\\Desktop\\finalminitrack\\ActivityPoints-Tracker-\\frontend\\src\\app\\features\\auth\\forgot-password\\forgot-password.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterLink } from '@angular/router';\r\nimport { AuthService } from '../../../../core/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, RouterLink],\r\n  template: `\r\n    <div class=\"container mt-5\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-6\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <h2 class=\"card-title text-center mb-4\">Forgot Password</h2>\r\n              \r\n              <div *ngIf=\"message\" class=\"alert\" [ngClass]=\"messageType === 'success' ? 'alert-success' : 'alert-danger'\">\r\n                {{ message }}\r\n              </div>\r\n\r\n              <form (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"mb-3\">\r\n                  <label for=\"email\" class=\"form-label\">Email address</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    class=\"form-control\"\r\n                    id=\"email\"\r\n                    [(ngModel)]=\"email\"\r\n                    name=\"email\"\r\n                    required\r\n                  >\r\n                </div>\r\n\r\n                <div class=\"d-grid gap-2\">\r\n                  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"isLoading\">\r\n                    {{ isLoading ? 'Sending...' : 'Send Reset Link' }}\r\n                  </button>\r\n                </div>\r\n\r\n                <div class=\"text-center mt-3\">\r\n                  <a routerLink=\"/login\">Back to Login</a>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class ForgotPasswordComponent {\r\n  email: string = '';\r\n  message: string = '';\r\n  messageType: 'success' | 'danger' = 'success';\r\n  isLoading: boolean = false;\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  onSubmit() {\r\n    this.isLoading = true;\r\n    this.message = '';\r\n    \r\n    this.authService.forgotPassword(this.email).subscribe({\r\n      next: (response) => {\r\n        this.message = 'Password reset link has been sent to your email';\r\n        this.messageType = 'success';\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        this.message = error.error?.message || 'An error occurred';\r\n        this.messageType = 'danger';\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n} "],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,UAAU,QAAQ,iBAAiB;AAiDrC,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAMlCC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAL/B,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,OAAO,GAAW,EAAE;IACpB,KAAAC,WAAW,GAAyB,SAAS;IAC7C,KAAAC,SAAS,GAAY,KAAK;EAEqB;EAE/CC,QAAQA,CAAA;IACN,IAAI,CAACD,SAAS,GAAG,IAAI;IACrB,IAAI,CAACF,OAAO,GAAG,EAAE;IAEjB,IAAI,CAACF,WAAW,CAACM,cAAc,CAAC,IAAI,CAACL,KAAK,CAAC,CAACM,SAAS,CAAC;MACpDC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAACP,OAAO,GAAG,iDAAiD;QAChE,IAAI,CAACC,WAAW,GAAG,SAAS;QAC5B,IAAI,CAACC,SAAS,GAAG,KAAK;MACxB,CAAC;MACDM,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACR,OAAO,GAAGQ,KAAK,CAACA,KAAK,EAAER,OAAO,IAAI,mBAAmB;QAC1D,IAAI,CAACC,WAAW,GAAG,QAAQ;QAC3B,IAAI,CAACC,SAAS,GAAG,KAAK;MACxB;KACD,CAAC;EACJ;CACD;AAzBYN,uBAAuB,GAAAa,UAAA,EA9CnCjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,qBAAqB;EAC/BC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACnB,YAAY,EAAEC,WAAW,EAAEC,UAAU,CAAC;EAChDkB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAyCX,CAAC,C,EACWjB,uBAAuB,CAyBnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}