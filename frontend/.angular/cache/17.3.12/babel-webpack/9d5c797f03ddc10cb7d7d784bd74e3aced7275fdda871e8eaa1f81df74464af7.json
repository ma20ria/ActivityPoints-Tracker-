{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport class ActivityService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.apiUrl = 'http://localhost:5000/api/activities';\n  }\n  getHeaders() {\n    const token = localStorage.getItem('token');\n    return new HttpHeaders().set('Authorization', `Bearer ${token}`);\n  }\n  submitActivity(activityData) {\n    const headers = this.getHeaders();\n    return this.http.post(this.apiUrl, activityData, {\n      headers\n    }).pipe(catchError(this.handleError));\n  }\n  getMyActivities() {\n    const headers = this.getHeaders();\n    return this.http.get(this.apiUrl, {\n      headers\n    }).pipe(catchError(this.handleError));\n  }\n  getPendingActivities() {\n    return this.http.get(`${this.apiUrl}/pending`).pipe(catchError(this.handleError));\n  }\n  reviewActivity(id, reviewData) {\n    return this.http.put(`${this.apiUrl}/${id}/review`, reviewData).pipe(catchError(this.handleError));\n  }\n  getAllActivities() {\n    return this.http.get(`${this.apiUrl}/all`).pipe(catchError(this.handleError));\n  }\n  generateReport(params = {}) {\n    const queryParams = new URLSearchParams();\n    if (params.teacherId) queryParams.append('teacherId', params.teacherId);\n    if (params.studentIds) queryParams.append('studentIds', params.studentIds);\n    if (params.department) queryParams.append('department', params.department);\n    if (params.class) queryParams.append('class', params.class);\n    if (params.semester) queryParams.append('semester', params.semester);\n    if (params.status) queryParams.append('status', params.status);\n    const url = `${this.apiUrl}/report?${queryParams.toString()}`;\n    return this.http.get(url);\n  }\n  handleError(error) {\n    let errorMessage = 'An unknown error occurred';\n    if (error.error instanceof ErrorEvent) {\n      // Client-side error\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      // Server-side error\n      if (error.status === 401) {\n        errorMessage = 'Please login again to continue';\n        // Redirect to login if unauthorized\n        window.location.href = '/auth/login';\n      } else if (error.error && error.error.message) {\n        errorMessage = error.error.message;\n      } else {\n        errorMessage = `Server error. Please try again.`;\n      }\n    }\n    console.error('API Error:', error);\n    return throwError(() => new Error(errorMessage));\n  }\n  static {\n    this.ɵfac = function ActivityService_Factory(t) {\n      return new (t || ActivityService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ActivityService,\n      factory: ActivityService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","throwError","catchError","ActivityService","constructor","http","authService","apiUrl","getHeaders","token","localStorage","getItem","set","submitActivity","activityData","headers","post","pipe","handleError","getMyActivities","get","getPendingActivities","reviewActivity","id","reviewData","put","getAllActivities","generateReport","params","queryParams","URLSearchParams","teacherId","append","studentIds","department","class","semester","status","url","toString","error","errorMessage","ErrorEvent","message","window","location","href","console","Error","i0","ɵɵinject","i1","HttpClient","i2","AuthService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\LENOVO\\OneDrive\\Desktop\\finalminitrack\\ActivityPoints-Tracker-\\frontend\\src\\app\\core\\services\\activity.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Activity } from '../models/activity.model';\nimport { environment } from '../../../environments/environment';\nimport { AuthService } from './auth.service';\n\n// Define the API response interfaces\ninterface ApiResponse<T> {\n  success: boolean;\n  count?: number;\n  data: T;\n  message?: string;\n}\n\ninterface PendingActivitiesResponse {\n  success: boolean;\n  count: number;\n  stats: {\n    pending: number;\n    approved: number;\n    rejected: number;\n  };\n  data: Activity[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActivityService {\n  private apiUrl = 'http://localhost:5000/api/activities';\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService\n  ) { }\n\n  private getHeaders(): HttpHeaders {\n    const token = localStorage.getItem('token');\n    return new HttpHeaders().set('Authorization', `Bearer ${token}`);\n  }\n\n  submitActivity(activityData: FormData): Observable<ApiResponse<Activity>> {\n    const headers = this.getHeaders();\n    return this.http.post<ApiResponse<Activity>>(this.apiUrl, activityData, { headers })\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  getMyActivities(): Observable<ApiResponse<Activity[]>> {\n    const headers = this.getHeaders();\n    return this.http.get<ApiResponse<Activity[]>>(this.apiUrl, { headers })\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  getPendingActivities(): Observable<PendingActivitiesResponse> {\n    return this.http.get<PendingActivitiesResponse>(`${this.apiUrl}/pending`)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  reviewActivity(id: string, reviewData: { status: 'approved' | 'rejected', feedback?: string, pointsAwarded?: number }): Observable<ApiResponse<Activity>> {\n    return this.http.put<ApiResponse<Activity>>(`${this.apiUrl}/${id}/review`, reviewData)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  getAllActivities(): Observable<ApiResponse<Activity[]>> {\n    return this.http.get<ApiResponse<Activity[]>>(`${this.apiUrl}/all`)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  generateReport(params: { \n    teacherId?: string;\n    studentIds?: string;\n    department?: string; \n    class?: string;\n    semester?: string; \n    status?: string \n  } = {}): Observable<any> {\n    const queryParams = new URLSearchParams();\n    \n    if (params.teacherId) queryParams.append('teacherId', params.teacherId);\n    if (params.studentIds) queryParams.append('studentIds', params.studentIds);\n    if (params.department) queryParams.append('department', params.department);\n    if (params.class) queryParams.append('class', params.class);\n    if (params.semester) queryParams.append('semester', params.semester);\n    if (params.status) queryParams.append('status', params.status);\n    \n    const url = `${this.apiUrl}/report?${queryParams.toString()}`;\n    return this.http.get<any>(url);\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'An unknown error occurred';\n    \n    if (error.error instanceof ErrorEvent) {\n      // Client-side error\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      // Server-side error\n      if (error.status === 401) {\n        errorMessage = 'Please login again to continue';\n        // Redirect to login if unauthorized\n        window.location.href = '/auth/login';\n      } else if (error.error && error.error.message) {\n        errorMessage = error.error.message;\n      } else {\n        errorMessage = `Server error. Please try again.`;\n      }\n    }\n    \n    console.error('API Error:', error);\n    return throwError(() => new Error(errorMessage));\n  }\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}