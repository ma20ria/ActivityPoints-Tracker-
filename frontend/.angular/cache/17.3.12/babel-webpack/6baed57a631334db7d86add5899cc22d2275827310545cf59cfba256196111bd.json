{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport class ActivityService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.apiUrl = `${environment.apiUrl}/api/activities`;\n  }\n  getHeaders() {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n    return new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n  }\n  submitActivity(formData) {\n    const headers = this.getHeaders();\n    return this.http.post(`${this.apiUrl}/submit`, formData, {\n      headers,\n      reportProgress: true,\n      observe: 'response'\n    }).pipe(catchError(this.handleError));\n  }\n  getMyActivities() {\n    const headers = this.getHeaders();\n    return this.http.get(`${this.apiUrl}/my-activities`, {\n      headers\n    }).pipe(catchError(this.handleError));\n  }\n  getPendingActivities() {\n    const headers = this.getHeaders();\n    return this.http.get(`${this.apiUrl}/pending`, {\n      headers\n    }).pipe(catchError(this.handleError));\n  }\n  reviewActivity(id, reviewData) {\n    const headers = this.getHeaders();\n    return this.http.put(`${this.apiUrl}/${id}/review`, reviewData, {\n      headers\n    }).pipe(catchError(this.handleError));\n  }\n  getStudentReport(studentId) {\n    const headers = this.getHeaders();\n    return this.http.get(`${this.apiUrl}/student-report/${studentId}`, {\n      headers\n    }).pipe(catchError(this.handleError));\n  }\n  getTeacherReport(teacherId) {\n    const headers = this.getHeaders();\n    return this.http.get(`${this.apiUrl}/teacher-report/${teacherId}`, {\n      headers\n    }).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    let errorMessage = 'An unknown error occurred';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      switch (error.status) {\n        case 401:\n          errorMessage = 'Session expired. Please login again.';\n          this.authService.logout();\n          break;\n        case 403:\n          errorMessage = 'You do not have permission to perform this action.';\n          break;\n        case 404:\n          errorMessage = 'The requested resource was not found.';\n          break;\n        case 413:\n          errorMessage = 'File size too large. Please upload a smaller file.';\n          break;\n        case 415:\n          errorMessage = 'Invalid file type. Please upload PDF, JPG, JPEG, or PNG files only.';\n          break;\n        case 500:\n          errorMessage = 'Server error. Please try again later.';\n          break;\n        default:\n          errorMessage = error.error?.message || 'An error occurred. Please try again.';\n      }\n    }\n    console.error('API Error:', error);\n    return throwError(() => new Error(errorMessage));\n  }\n  static {\n    this.ɵfac = function ActivityService_Factory(t) {\n      return new (t || ActivityService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ActivityService,\n      factory: ActivityService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","throwError","catchError","environment","ActivityService","constructor","http","authService","apiUrl","getHeaders","token","localStorage","getItem","Error","submitActivity","formData","headers","post","reportProgress","observe","pipe","handleError","getMyActivities","get","getPendingActivities","reviewActivity","id","reviewData","put","getStudentReport","studentId","getTeacherReport","teacherId","error","errorMessage","ErrorEvent","message","status","logout","console","i0","ɵɵinject","i1","HttpClient","i2","AuthService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\LENOVO\\OneDrive\\Desktop\\finalminitrack\\ActivityPoints-Tracker-\\frontend\\src\\app\\core\\services\\activity.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Activity } from '../models/activity.model';\nimport { environment } from '../../../environments/environment';\nimport { AuthService } from './auth.service';\n\n// Define the API response interfaces\ninterface ApiResponse<T> {\n  success: boolean;\n  count?: number;\n  data: T;\n  message?: string;\n}\n\ninterface PendingActivitiesResponse {\n  success: boolean;\n  count: number;\n  stats: {\n    pending: number;\n    approved: number;\n    rejected: number;\n  };\n  data: Activity[];\n}\n\ninterface StudentReport {\n  studentId: string;\n  studentName: string;\n  totalPoints: number;\n  activities: Activity[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActivityService {\n  private apiUrl = `${environment.apiUrl}/api/activities`;\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService\n  ) { }\n\n  private getHeaders(): HttpHeaders {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n    return new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n  }\n\n  submitActivity(formData: FormData): Observable<ApiResponse<Activity>> {\n    const headers = this.getHeaders();\n    return this.http.post<ApiResponse<Activity>>(`${this.apiUrl}/submit`, formData, { \n      headers,\n      reportProgress: true,\n      observe: 'response'\n    }).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  getMyActivities(): Observable<ApiResponse<Activity[]>> {\n    const headers = this.getHeaders();\n    return this.http.get<ApiResponse<Activity[]>>(`${this.apiUrl}/my-activities`, { headers })\n      .pipe(catchError(this.handleError));\n  }\n\n  getPendingActivities(): Observable<PendingActivitiesResponse> {\n    const headers = this.getHeaders();\n    return this.http.get<PendingActivitiesResponse>(`${this.apiUrl}/pending`, { headers })\n      .pipe(catchError(this.handleError));\n  }\n\n  reviewActivity(id: string, reviewData: { \n    status: 'approved' | 'rejected', \n    feedback?: string, \n    pointsAwarded?: number \n  }): Observable<ApiResponse<Activity>> {\n    const headers = this.getHeaders();\n    return this.http.put<ApiResponse<Activity>>(\n      `${this.apiUrl}/${id}/review`, \n      reviewData,\n      { headers }\n    ).pipe(catchError(this.handleError));\n  }\n\n  getStudentReport(studentId: string): Observable<ApiResponse<StudentReport>> {\n    const headers = this.getHeaders();\n    return this.http.get<ApiResponse<StudentReport>>(\n      `${this.apiUrl}/student-report/${studentId}`,\n      { headers }\n    ).pipe(catchError(this.handleError));\n  }\n\n  getTeacherReport(teacherId: string): Observable<ApiResponse<StudentReport[]>> {\n    const headers = this.getHeaders();\n    return this.http.get<ApiResponse<StudentReport[]>>(\n      `${this.apiUrl}/teacher-report/${teacherId}`,\n      { headers }\n    ).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'An unknown error occurred';\n    \n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      switch (error.status) {\n        case 401:\n          errorMessage = 'Session expired. Please login again.';\n          this.authService.logout();\n          break;\n        case 403:\n          errorMessage = 'You do not have permission to perform this action.';\n          break;\n        case 404:\n          errorMessage = 'The requested resource was not found.';\n          break;\n        case 413:\n          errorMessage = 'File size too large. Please upload a smaller file.';\n          break;\n        case 415:\n          errorMessage = 'Invalid file type. Please upload PDF, JPG, JPEG, or PNG files only.';\n          break;\n        case 500:\n          errorMessage = 'Server error. Please try again later.';\n          break;\n        default:\n          errorMessage = error.error?.message || 'An error occurred. Please try again.';\n      }\n    }\n    \n    console.error('API Error:', error);\n    return throwError(() => new Error(errorMessage));\n  }\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}